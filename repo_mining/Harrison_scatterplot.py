import json
import matplotlib.pyplot as plt
from datetime import datetime
import pandas as pd

# Path to the JSON file generated by Harrison_authorsFileTouches.py
file_authors_path = "repo_mining/data/file_authors.json"

# Load the data
with open(file_authors_path, "r") as f:
    file_authors_data = json.load(f)

# Prepare the data for plotting
unique_files = list(file_authors_data.keys())  # Extract unique file names
file_index_mapping = {file: idx + 1 for idx, file in enumerate(unique_files)}  # Map files to unique numbers
plot_data = []

# Create plot data using unique file numbers
for file, entries in file_authors_data.items():
    file_number = file_index_mapping[file]  # Get unique file number
    for entry in entries:
        # Extract the week number and the author's name
        week = datetime.fromisoformat(entry["date"]).isocalendar()[1]
        plot_data.append({"week": week, "file_number": file_number, "author": entry["author"]})

# Convert to a pandas DataFrame
df = pd.DataFrame(plot_data)

# Assign unique colors to authors
authors = df["author"].unique()
colors = {author: plt.cm.tab10(i / len(authors)) for i, author in enumerate(authors)}

# Plot the scatter plot
plt.figure(figsize=(12, 8))
for author, group in df.groupby("author"):
    plt.scatter(group["file_number"], group["week"], label=author, color=colors[author], alpha=0.7)

# Customize x-axis to start at 0 and increment by 5
max_file_number = max(file_index_mapping.values())
x_ticks = range(0, max_file_number + 5, 5)

# Add labels and legend
plt.xlabel("File", fontsize=14)
plt.ylabel("Weeks", fontsize=14)
plt.xticks(
    ticks=x_ticks,
    labels=[i for i in x_ticks],
    rotation=45,
)
plt.legend(title="Author", bbox_to_anchor=(1.05, 1), loc="upper left")
plt.tight_layout()

# Show the plot
plt.show()